<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from Products.ERP5Type.Errors import TransformationRuleError\n
# Test if we must transform\n
# The test should actually be based on nodes, paths\n
# and capacities, which is not possible now\n
\n
movement = context\n
\n
try:\n
  root_applied_rule = movement.getRootAppliedRule()\n
except AttributeError:\n
  return False\n
root_rule = root_applied_rule.getSpecialiseValue()\n
order = root_applied_rule.getCausalityValue()\n
root_movement = movement.getRootSimulationMovement()\n
\n
# Test movement\n
if (root_rule is None or\n
    root_rule.getPortalType() not in ("Production Order Rule", "Production Order Root Simulation Rule") or\n
    order is None or\n
    movement.getResourceValue() is None or\n
    movement.getSourceValue() is None or\n
    movement.getResourceValue() != root_movement.getResourceValue()):\n
  return False\n
if root_rule.getPortalType() in ("Production Order Root Simulation Rule",) and\\\n
    movement.getPath() == root_movement.getPath():\n
  return False\n
\n
supply_chain = rule.getSupplyChain(movement.getParentValue())\n
parent_supply_link = rule.getCurrentSupplyLink(movement)\n
current_tranfo_link_list = supply_chain.getPreviousProductionSupplyLinkList(parent_supply_link)\n
length = len(current_tranfo_link_list)\n
if length == 0:\n
  return False\n
elif length > 1:\n
  # XXX FIXME: implementation needed\n
  raise TransformationRuleError,\\\n
    "TransformationRule not able to use multiple SupplyLink."\n
return True\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>rule</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SimulationMovement_testTransformationRule</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
